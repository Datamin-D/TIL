#1. select다루는법
select는 컨테이너
url = "웹페이지 주소"
raw = requests.get(url,
                  headers={'User-Agent':'Mozilla/5.0'}) #우회 접속 "저 크롤러아님! 불여시임!"  
html = BeautifulSoup(raw.text, "html.parser") #파싱. 위에는 걍 텍스트를 뽑아왔다면 여기서는 <html 어쩌구>를 의미있는 단위로 인식.

#select, select_one
movie_list = html.select("태그") 하면 태그에 해당하는 태그값을 리스트로 받음
for i in movie_list:
  movie_title = movie.select_one("a").text

select_one은 select로 받은 리스트 안에 있는 태그를 접근하게 해줌.

그런데!!! 더 접근할 필요없다? >> 셀렉트로 만든 리스트에서 인덱싱해다가 써도 됨.


#2. nth-child & nth-of-type차이
nth-child쓰면 가끔 오류남. 이유는 모르겠슴..

nth-child는 자식들 전체중에. nth-of-type은 자식들중 특정한 타입에대해 접근.
https://firerope.tistory.com/5 참고

#3. 웹크롤링 시 글씨가 깨진다? broken words?
--> raw.encoding = 'utf-8'해주면 됨.

url = "https://www.the-numbers.com/market/" + "2019" + "/top-grossing-movies" #**2019 >> years for문으로
raw = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'})
raw.encoding = 'utf-8' #*raw.encoding = 'utf-8' 해주면 됨
html = BeautifulSoup(raw.text, "html.parser")

#4.StaleElementReferenceException 이 일어난다?
문서 참조를 이상한데 해서 그런다함. 이런경우 초기화시켜줘보자.
변수.click()
1. wd.get(url)다시
2. 변수 초기화 (변수의 css_selector 태그 다시 적어주기)
아래 참고

https://velog.io/@matisse/%EC%9B%B9-%ED%81%AC%EB%A1%A4%EB%A7%81#--solution-1

#4. element .click()이 안된다?
wd.find_elements_by_css_selector("selector").click()이 안되면서
ElementClickInterceptedException: Message: element click intercepted: 이런 오류 메세지가 뜸.

from selenium.webdriver.common.keys import Keys #.send_keys 쓰게.
wd.find_elements_by_css_selector("selector").send_keys(Keys.ENTER)
시도 해보니까 된다!
출처:
https://wkdtjsgur100.github.io/selenium-does-not-work-to-click/

#5. Beautifulsoup객체와 find, find_all

import urllib.request // url 라이브러리
import bs4 // beautifulsoup 라이브러리

url = "https://www.naver.com/" // 네이버 링크
html = urllib.request.urlopen(url) // html(웹페이지소스코드)

bsObj = bs4.BeautifulSoup(html, "html.parser") // 웹페이지 소스코드 parser

# print(bsObj) // 웹페이지 모든 소스코드가 출력된다.

top_right = bsObj.find("div",{"class":"area_links"}) // area_links라는 클래스의 소스코드를 뽑아온다.

#print(top_right) // 출력
first_a = top_right.find("a") // 'a'태그를 가진 코드를 출력
print(first_a.text) // 'a'태그를 가진 코드 중 텍스트만 출력

#6. 뒤로가기
wd.back()

#7. 클래스 띄어쓰기

<a class="_sp_each_url _sp_each_title...">
와 같이  중간에 띄어쓰기가 한번 있습니다.

이는 태그가 여러 클래스를 한꺼번에 가질 수 있기 때문입니다. 이 클래스를 '띄어쓰기'로 구분합니다. 이는 selector로 . 을 찍어 주시면 됩니다. 간단하게는 그냥 띄어쓰기를 .으로 대체해주신다 생각하면 됩니다.

하지만! Case by Case로 이는 문제가 될 수도 있습니다. 가끔은 위 사진과 같이 클래스가 두개로 뜨지만 데이터 별로 하나의 클래스만을 선택해야 원하는 데이터가 수집되는 경우도 있습니다.

이는 select활용 시, ctrl + f로 실제로 태그가 잘 지정되었는지 확인하면 알 수 있습니다.
