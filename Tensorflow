1. 원핫인코딩
#from tensorflow.keras.utils import np_utils

# Y_train = tf.keras.np_utils.to_categorical(Y_class_train,10)
# Y_test = tf.keras.np_utils.to_categorical(Y_class_test,10)
#위 방식 tf.keras.np_utils.to_categorical 안씀!!이제는 간단히 to_categorical이라 씀.
from keras.utils import to_categorical 
Y_train = to_categorical(Y_train, num_classes=10)
Y_test = to_categorical(Y_test, num_classes=10)

2. tensorflow
#tf.set_random_seed(3)가
#tf.random.set_seed(3)로바뀜
tf.random.set_seed(3)

3. Callbacks 활용 - savebestonly, earlystopping 등. 

# Callback 선언
# overfitting을 막기 위한 ealrystop 추가 #소셜애널리틱스 수업 중 나온 부분

earlystop_callback = EarlyStopping(monitor='val_acc', min_delta=0.0001,patience=2)
# min_delta: the threshold that triggers the termination (acc should at least improve 0.0001)
# patience: no improvment epochs (patience = 1, 1번 이상 상승이 없으면 종료)\

checkpoint_path = DATA_OUT_PATH + model_name + '/weights.h5'
checkpoint_dir = os.path.dirname(checkpoint_path)

# Create path if exists
if os.path.exists(checkpoint_dir):
    print("{} -- Folder already exists \n".format(checkpoint_dir))
else:
    os.makedirs(checkpoint_dir, exist_ok=True)
    print("{} -- Folder create complete \n".format(checkpoint_dir))
    

cp_callback = ModelCheckpoint(
    checkpoint_path, monitor='val_acc', verbose=1, save_best_only=True, save_weights_only=True)


model = Sequential()
model.add(Embedding(vocab_size, 32)) # 임베딩 벡터의 차원은 32 # Keras에서 Embedding 하려면, 먼저 정수 인코딩이 되어야 함
model.add(SimpleRNN(32)) # RNN 셀의 hidden_size는 32
model.add(Dense(1, activation='sigmoid'))

model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['acc'])
history = model.fit(X_train, y_train, epochs=4, batch_size=64, validation_split=0.2, callbacks=[earlystop_callback, cp_callback]) #여기에 callbacks 지정

# 정확도 확인
print("\n 테스트 정확도: %.4f" % (model.evaluate(X_test, y_test)[1]))

#나중에 모델 불러오기
SAVE_FILE_NM = 'weights.h5'

model.load_weights(경로)

