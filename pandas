#1. map함수 쓰는법
df['column'].map(lambda x: x 에 할 연산)
e.g.
#빈 리스트인지 확인
df['Genre'].map(lambda x : x == "[]") 
하면 series 값 별로 lambda함수를 연산해줌.

#2. DataFrame합치는 pd.concat()
#axis 방향
pd.concat(df1,df2,axis = 1) #옆으로 붙임
pd.concat(df1,df2,axis = 0) #밑에다 붙임.
first argument must be an iterable of pandas objects, you passed an object of type "DataFrame" 이 뜰것. 리스트로 넣어줘야하기 때문.

  #맞는 코드
  pd.concat([df1,df2],axis = 1) #옆으로 붙임
  pd.concat([df1,df2],axis = 0) #밑에다 붙임.

# * pd.concat([],axis = 1)로 합칠 때 합치는 기준은 index임.  
# 물론 pd.concat([df1,df2],ignore_index = True,axis = 1) 옵션을 주면 말그대로 옆으로 그냥 갖다붙임. 그러나 컬럼 이름이 0,1,2,..로 변해버림
# = pd.concat([df_5, df_6], keys=['df_5', 'df_6'], names=['df_name', 'row_number']) 같이 names = 를 통해 컬럼 이름을 주면 됨.



출처: https://rfriend.tistory.com/256 [R, Python 분석과 프로그래밍의 친구 (by R Friend)]


#3. 열 삭제 df.drop()
df.drop(['컬럼1','컬럼2'],axis = 1) #axis 지정안해주면 컬럼 못찾겠다 에러날 수도.  
#이대로 놓는다고 df가 변하지는 않음.
df = df.drop(['컬럼1','컬럼2'],axis = 1) #까지 해줘야 함.

#4. 행삭제
df.drop([행인덱스,행인덱스])

5.행 수 세는법
len(df[df['Label'] == 'Benign']) 이렇게 len으로  특정 컬럼('Label')의 행 갯수 셀 수 있음.

